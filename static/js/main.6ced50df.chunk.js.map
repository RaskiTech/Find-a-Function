{"version":3,"sources":["canvas/ExtendedCanvas.js","canvas/ScreenView.js","colors.js","canvas/CoordinatePlane.js","TopBar.js","App.js","index.js"],"names":["ExtendedCanvas","draw","init","zoom","canvasRef","useRef","useState","window","innerWidth","setWidth","innerHeight","setHeight","firstUpdate","setFirstUpdate","updateWidthAndHeight","callZoom","event","deltaY","preventDefault","useEffect","canvas","current","context","getContext","width","height","style","left","top","position","addEventListener","passive","removeEventListener","ScreenView","props","canvasDrag","addDataPoint","rest","delta","lastMousePositionX","lastMousePositionY","isMouseDown","setMouseDown","hasDragged","setHasDragged","setLastMousePositionX","setLastMousePositionY","id","className","onTouchStart","touch","touches","clientX","clientY","onTouchEnd","onTouchMove","differenceX","differenceY","onMouseMove","nativeEvent","offsetX","offsetY","onMouseDown","onMouseUp","ref","COLORS","white","gray","grayDark","black","blackDark","yellow","yellowDark","orange","orangeDark","turquoise","turquoiseDark","blue","purple","maxScale","minScale","functionColor","functions","a","P","map","x","y","calculateBestPolynomial","Infinity","Math","pow","exp","useNonLinearRegression","sin","log","CoordinatePlane","ctx","undefined","scale","drawEveryNthLine","xOrigin","yOrigin","renderingFunctionObjects","initCanvas","componentDidUpdate","prevProps","prevState","clearBoardFlag","findingBestLine","GetBestFuncs","points","stopFunctionFind","planeToScreenSpace","xPDifference","yPDifference","screenToPlaneSpace","normalizedX","normalizedY","zoomMultiplyCounter","mouseX","mouseY","change","console","mouseBefore","mouseBeforeScreen","drawFunction","funcObject","color","lineWidth","strokeStyle","beginPath","smallestSample","biggestSample","startScreenPos","max","endScreenPos","min","interval","xP","yP","lineTo","stroke","drawFunctionFormula","xPos","yPos","fillStyle","font","fillText","RoundToDecimals","fillRect","fill","drawBG","lineSpace","startDraw","i","moveTo","drawScaleLines","length","drawAxis","arc","PI","drawPoints","spaceBetweenLines","screenSide","firstDrawX","floor","firstDrawY","firstDrawPixel","RoundingFactor","pos","num","round","drawScaleText","error","this","Component","Array","functionApproximates","functionApproximateIndex","params","leastSquaresMultiplier","func","total","getLeastSquares","sort","b","functionsToShow","push","GetStringFormula","number","tenthPower","Number","EPSILON","RoundCorrectDecimals","str","nextParamIndex","slice","abs","coefficentAmount","matrixA","zeros","matrixB","matAValues","j","value","index","matrix","newValue","matrixAT","M","ii","dim","e","I","C","matrix_invert","_data","multiply","funcIndex","iteration","variableCount","split","initialValues","fun","Parm0","Opt","maxIter","step","p","si","display","objFun","yp","yi","reduce","cloneVector","V","v","P0","P1","n","funParm","nonLinearRegression","TopBar","addPoint","btnStyle","backgroundColor","borderColor","yFieldValue","setYFieldValue","xFieldValue","setXFieldValue","xInvalid","setXInvalid","yInvalid","setYInvalid","addPointEvent","invalid","changeFocusingField","key","toLowerCase","includes","target","selectionStart","defaultValue","form","indexOf","elements","focus","ValidateFieldAsNumber","onInputEvent","replace","Navbar","background","expand","sticky","Col","Button","onClick","clear","disabled","findingDone","startFunctionFind","Form","Row","Control","isInvalid","size","type","placeholder","onInput","onKeyDown","App","setPoints","setClearBoardFlag","setFindingBestLine","setFindingDone","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ced50df.chunk.js","sourcesContent":["import { useRef, useEffect, useState } from 'react'\r\n\r\nconst ExtendedCanvas = (draw, init, zoom) => {\r\n  \r\n  const canvasRef = useRef(null)\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [height, setHeight] = useState(window.innerHeight);\r\n  const [firstUpdate, setFirstUpdate] = useState(true);\r\n  \r\n  const updateWidthAndHeight = () => {\r\n    setWidth(window.innerWidth);\r\n    setHeight(window.innerHeight);\r\n  };\r\n\r\n  const callZoom = (event) => {\r\n    zoom(event.deltaY);\r\n    event.preventDefault();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext('2d')\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n    canvas.style.left = \"0px\";\r\n    canvas.style.top = \"0px\";\r\n    canvas.style.position = \"absolute\";\r\n    if (firstUpdate) {\r\n      setFirstUpdate(false);\r\n      init(context);\r\n    }\r\n    draw(context);\r\n\r\n    window.addEventListener(\"resize\", updateWidthAndHeight);\r\n    window.addEventListener(\"wheel\", callZoom, { passive: false });\r\n    return () => {window.removeEventListener(\"resize\", updateWidthAndHeight);\r\n                  window.removeEventListener(\"wheel\", callZoom, { passive: false });}\r\n  })\r\n  \r\n  return canvasRef;\r\n}\r\n\r\nexport default ExtendedCanvas;","import React, { useState } from 'react';\r\nimport ExtendedCanvas from './ExtendedCanvas.js'\r\n\r\nconst ScreenView = props => { \r\n    const callZoom = (delta) => {\r\n        zoom(delta, lastMousePositionX, lastMousePositionY);\r\n    }\r\n\r\n    const { init, draw, zoom, canvasDrag, addDataPoint, ...rest } = props;\r\n    const canvasRef = ExtendedCanvas(draw, init, callZoom);\r\n    \r\n    const [isMouseDown, setMouseDown] = useState(false);\r\n    const [hasDragged, setHasDragged] = useState(false);\r\n    const [lastMousePositionX, setLastMousePositionX] = useState(0);\r\n    const [lastMousePositionY, setLastMousePositionY] = useState(0);\r\n    \r\n    const mouseDown = ({nativeEvent}) => {\r\n        setMouseDown(true);\r\n        setHasDragged(false);\r\n        const {offsetX, offsetY} = nativeEvent;\r\n        setLastMousePositionX(offsetX);\r\n        setLastMousePositionY(offsetY);\r\n    }\r\n    const mouseMove = ({nativeEvent}) => {\r\n        const {offsetX, offsetY} = nativeEvent;\r\n        setLastMousePositionX(offsetX);\r\n        setLastMousePositionY(offsetY);\r\n        \r\n        if (isMouseDown) {\r\n            setHasDragged(true);\r\n            let differenceX = lastMousePositionX - offsetX;\r\n            let differenceY = lastMousePositionY - offsetY;\r\n            canvasDrag(differenceX, differenceY);\r\n        }\r\n    }\r\n    const mouseUp = ({nativeEvent}) => {\r\n        setMouseDown(false);\r\n        if (!hasDragged) {\r\n            // It's a click. Add a point\r\n            const {offsetX, offsetY} = nativeEvent;\r\n            addDataPoint(offsetX, offsetY);\r\n        }\r\n    }\r\n\r\n    const touchDown = (event) => {\r\n        setMouseDown(true);\r\n        setHasDragged(false);\r\n        let touch = event.touches[0];\r\n        setLastMousePositionX(touch.clientX);\r\n        setLastMousePositionY(touch.clientY);\r\n    }\r\n    const touchMove = (event) => {\r\n        setHasDragged(true);\r\n        let touch = event.touches[0];\r\n        let differenceX = lastMousePositionX - touch.clientX;\r\n        let differenceY = lastMousePositionY - touch.clientY;\r\n        setLastMousePositionX(touch.clientX);\r\n        setLastMousePositionY(touch.clientY);\r\n        canvasDrag(differenceX, differenceY);\r\n    }\r\n    const touchUp = (event) => {\r\n        setMouseDown(false);\r\n        if (!hasDragged) {\r\n            // It's a click. Add a point\r\n            addDataPoint(lastMousePositionX, lastMousePositionY);\r\n        }\r\n    }\r\n    \r\n    /* \r\n    window.addEventListener('wheel', (event) => {\r\n        zoom(event.deltaY);\r\n        event.preventDefault();\r\n    }, { passive: false });\r\n    */\r\n\r\n    return (\r\n        <canvas id=\"canvas\" className=\"canvas\" onTouchStart={touchDown} onTouchEnd={touchUp} onTouchMove={touchMove}\r\n        onMouseMove={mouseMove} onMouseDown={mouseDown} onMouseUp={mouseUp} ref={canvasRef} {...rest}/>\r\n        /*document.getElementById(\"canvas\").addEventListener('wheel',function(event){\r\n            onScroll(event);\r\n            return false; \r\n        }, false)*/\r\n    )\r\n}\r\n  \r\nexport default ScreenView;","// Flat UI Palette v1\r\n\r\nexport const COLORS = {\r\n    white: '#ffffff',\r\n    gray: '#ecf0f1',\r\n    grayDark: '#bdc3c7',\r\n    black: '#34495e',\r\n    blackDark: '#2c3e50',\r\n    yellow: '#f1c40f',\r\n    yellowDark: '#f39c12',\r\n    orange: '#e67e22',\r\n    orangeDark: '#d35400',\r\n    turquoise: '#1abc9c',\r\n    turquoiseDark: '#16a085',\r\n    blue: '#3498db',\r\n    purple: '#9b59b6',\r\n}\r\n\r\nexport default COLORS;","import  { React, Component } from 'react'\r\nimport ScreenView from './ScreenView.js'\r\nimport COLORS from '../colors.js'\r\n\r\nimport { zeros, multiply } from \"mathjs\";\r\n\r\nconst minSpaceBetweenLines = 20;\r\nconst maxSpaceBetweenLine = 50;\r\nconst zoomSpeed = 0.003;\r\nconst startZoom = 50;\r\nconst maxScale = 1_000_000_000_000;\r\nconst minScale = 0.000_000_0015;\r\n\r\nconst pointRadius = 6;\r\nconst samplesInFunction = 200;\r\nconst functionLineWidth = 5;\r\n// From colors.js blended halfway with white\r\nconst functionColor = [\r\n    '#F8E287'/*Yellow*/, '#8DDECE'/*turquoise*/, \r\n    '#9ACCED'/*Blue*/, '#CDACDB'/*Purple*/,\r\n    '#F3BF91'/*Orange*/, '#F3A69E'/*Red*/,\r\n    '#97E6B8'/*Green*/, '#9AA4AF'/*Gray*/\r\n]\r\n\r\nconst textXOffsetFromCenter = 0;\r\nconst textYOffsetFromCenter = -5;\r\nconst linesBetweenTexts = 5;\r\n\r\nconst maxShowFuncAmount = 3;\r\nconst leastSquaresTreshold = 1;\r\nconst decimals = 5;\r\n\r\n/* \r\nf[0] = function as a map, \r\nf[1] = function - normal version, \r\nf[2] = method to find best-fit, \r\nf[3] = string formula (params with _)\r\nf[4] = least squares multiplier\r\nf[5] = smallest sample (use if function is not defined everywhere)\r\nf[6] = biggest sample (use if function is not defined everywhere)\r\nf[7] = min amount of data points required\r\n\r\nLeast Squares multiplier:\r\nIf many curves get the same evaluation, the program will pick the one that has\r\nsmaller least square multiplier. For example if both Order 5 polynomial \r\nand a line get the same evaluation, a line is better\r\n\r\n*/\r\nconst functions = [ \r\n    [ /* Line */\r\n        function(a, P) { return a.map(function(x) { return P[0] + x * P[1] })},\r\n        function(x, P)                            { return P[0] + x * P[1] },\r\n        function(x, y) { return calculateBestPolynomial(2, x, y) },\r\n        \"_x + _\",\r\n        1,\r\n        -Infinity,\r\n        Infinity,\r\n        2\r\n    ],\r\n    [ /* Order 2 polynomial */\r\n        function(a, P) { return a.map(function(x) { return P[0] + x * P[1] + x * x * P[2] })},\r\n        function(x, P)                            { return P[0] + x * P[1] + x * x * P[2] },\r\n        function(x, y) { return calculateBestPolynomial(3, x, y) },\r\n        \"_x² + _x + _\",\r\n        2,\r\n        -Infinity,\r\n        Infinity,\r\n        3\r\n    ],\r\n    [ /* Order 3 polynomial */\r\n        function(a, P) { return a.map(function(x) { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3] })},\r\n        function(x, P)                            { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3] },\r\n        function(x, y) { return calculateBestPolynomial(4, x, y) },\r\n        \"_x³ + _x² + _x + _\",\r\n        3,\r\n        -Infinity,\r\n        Infinity,\r\n        4\r\n    ],\r\n    [ /* Order 4 polynomial */\r\n        function(a, P) { return a.map(function(x) { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3]+Math.pow(x, 4)*P[4] })},\r\n        function(x, P)                            { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3]+Math.pow(x, 4)*P[4] },\r\n        function(x, y) { return calculateBestPolynomial(5, x, y) },\r\n        \"_x⁴ + _x³ + _x² + _x + _\",\r\n        4,\r\n        -Infinity,\r\n        Infinity,\r\n        5\r\n    ],\r\n    [ /* Order 5 polynomial */\r\n        function(a, P) { return a.map(function(x) { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3]+Math.pow(x, 4)*P[4]+Math.pow(x, 5)*P[5] })},\r\n        function(x, P)                            { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3]+Math.pow(x, 4)*P[4]+Math.pow(x, 5)*P[5] },\r\n        function(x, y) { return calculateBestPolynomial(6, x, y) },\r\n        \"_x⁵ + _x⁴ + _x³ + _x² + _x + _\",\r\n        5,\r\n        -Infinity,\r\n        Infinity,\r\n        6\r\n    ],\r\n    [ /* Natural Exponent */\r\n        function(a, P) { return a.map(function(x) { return P[0] * Math.exp(P[1] * x) + P[2] })},\r\n        function(x, P)                            { return P[0] * Math.exp(P[1] * x) + P[2] },\r\n        function(x, y) { return useNonLinearRegression(5, 5000, x, y) },\r\n        \"_e^_ + _\",\r\n        1,\r\n        -Infinity,\r\n        Infinity,\r\n        1\r\n    ],\r\n    [ /* Sin */\r\n        function(a, P) { return a.map(function(x) { return P[0] * Math.sin(P[1] * x + P[2]) + P[3] })},\r\n        function(x, P)                            { return P[0] * Math.sin(P[1] * x + P[2]) + P[3] },\r\n        function(x, y) { return  useNonLinearRegression(6, 5000, x, y) },\r\n        \"_ * sin(_x + _) + _\",\r\n        3,\r\n        -Infinity,\r\n        Infinity,\r\n        4\r\n    ],\r\n    [ /* natural logarithmic */\r\n        function(a, P) { return a.map(function(x) { return P[0] * Math.log(P[1] * x) })},\r\n        function(x, P)                            { return P[0] * Math.log(P[1] * x) },\r\n        function(x, y) { return useNonLinearRegression(7, 5000, x, y) },\r\n        \"_ * ln(_x)\",\r\n        1,\r\n        0.000000000001,\r\n        Infinity,\r\n        1\r\n    ],\r\n];\r\n\r\nclass CoordinatePlane extends Component {\r\n    ctx = undefined;\r\n    scale = startZoom;\r\n    drawEveryNthLine = 1;\r\n    xOrigin = undefined;\r\n    yOrigin = undefined;\r\n\r\n    /* [ ... [func, i, stringFormula, error], [func, i, stringFormula, error] ... ] */\r\n    renderingFunctionObjects = [];\r\n\r\n    initCanvas = (ctx) => {\r\n        this.ctx = ctx;\r\n        this.xOrigin = ctx.canvas.width / 2;\r\n        this.yOrigin = ctx.canvas.height / 2;\r\n    }\r\n\r\n    canvasDrag = (differenceX, differenceY) => {\r\n        this.xOrigin -= differenceX;\r\n        this.yOrigin -= differenceY;\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        // Clear update incoming\r\n        if (this.props.clearBoardFlag !== prevProps.clearBoardFlag) {\r\n            this.renderingFunctionObjects = []\r\n        }\r\n\r\n        // Start finding best line\r\n        if (this.props.findingBestLine === true && prevProps.findingBestLine === false) {\r\n            this.renderingFunctionObjects = []\r\n            this.renderingFunctionObjects = GetBestFuncs(this.props.points);\r\n            this.props.stopFunctionFind();\r\n        }\r\n    }\r\n\r\n    planeToScreenSpace = (x, y) => {\r\n        // Multiply by the scale to get the pixel difference from the middle\r\n\t\tlet xPDifference = x * this.scale;\r\n\t\tlet yPDifference = y * -this.scale; // Use minus because the y axis is flipped in pixels\r\n\r\n\t\t// Add it to the pixel center coors to get the coords\r\n\t\tlet xP = this.xOrigin + xPDifference;\r\n\t\tlet yP = this.yOrigin + yPDifference; \r\n\r\n\t\treturn [xP, yP];\r\n    }\r\n    screenToPlaneSpace = (x, y) => {\r\n        // Set the planes 0 0 point to pixel 0 0.\r\n        let normalizedX = x - this.xOrigin;\r\n        let normalizedY = y - this.yOrigin;\r\n        // Divide by the scale to get the coordinates\r\n        let xScr = normalizedX / this.scale;\r\n        let yScr = normalizedY / -this.scale; // Use minus because the y axis is flipped in pixels\r\n        return [xScr, yScr];\r\n    }\r\n\r\n    // Zoom works like this: if the first non-zero number is a two, multiply by 5/2, else 2\r\n    zoomMultiplyCounter = 2;\r\n    zoom = (delta, mouseX, mouseY) => {\r\n        const change = delta * this.scale * zoomSpeed;\r\n        if ((this.scale > maxScale && change < 0) || (this.scale < minScale && change > 0)) {\r\n            console.log(\"Returning cause scale is\", this.scale, \"and delta is\", change);\r\n            return;\r\n        }\r\n\r\n        let mouseBefore = this.screenToPlaneSpace(mouseX, mouseY);\r\n        this.scale -= change;\r\n        let mouseBeforeScreen = this.planeToScreenSpace(mouseBefore[0], mouseBefore[1]);\r\n\r\n        this.xOrigin -= mouseBeforeScreen[0] - mouseX;\r\n        this.yOrigin -= mouseBeforeScreen[1] - mouseY;\r\n\r\n        // Scale text\r\n        if (this.drawEveryNthLine * this.scale < minSpaceBetweenLines) {\r\n            this.zoomMultiplyCounter--;\r\n            if (this.zoomMultiplyCounter < 0) {\r\n                this.zoomMultiplyCounter += 3;\r\n                this.drawEveryNthLine *= 5/2;\r\n            }\r\n            else this.drawEveryNthLine *= 2;\r\n        }\r\n        else if (this.drawEveryNthLine * this.scale > maxSpaceBetweenLine) {\r\n            this.zoomMultiplyCounter++;\r\n            if (this.zoomMultiplyCounter > 2) {\r\n                this.zoomMultiplyCounter -= 3;\r\n                this.drawEveryNthLine /= 5/2;\r\n            }\r\n            else this.drawEveryNthLine /= 2;\r\n        }\r\n\r\n        this.draw();\r\n    }\r\n\r\n    draw = () => {\r\n        let drawBG = (ctx) => {\r\n            ctx.fillStyle = COLORS.white;\r\n            ctx.beginPath();\r\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            ctx.fill();\r\n        }\r\n        let drawScaleLines = (ctx) => {\r\n            ctx.lineWidth = 2;\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = COLORS.gray;\r\n            let lineSpace = this.scale * this.drawEveryNthLine;\r\n            let startDraw = this.xOrigin % lineSpace;// Get the remainder to know where to start drawing the lines\r\n\r\n            for (let i = startDraw; i < ctx.canvas.width; i += lineSpace) {\r\n                ctx.moveTo(i, 0);\r\n                ctx.lineTo(i, ctx.canvas.height);\r\n            }\r\n            startDraw = this.yOrigin % lineSpace;\r\n            for (let i = startDraw; i < ctx.canvas.height; i += lineSpace) {\r\n                ctx.moveTo(0, i);\r\n                ctx.lineTo(ctx.canvas.width, i);\r\n            }\r\n            ctx.stroke();\r\n        }\r\n        let drawAxis = (ctx) => {\r\n            ctx.lineWidth = 2;\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = COLORS.black;\r\n            ctx.moveTo(0, this.yOrigin);\r\n            ctx.lineTo(ctx.canvas.width, this.yOrigin);\r\n            ctx.moveTo(this.xOrigin, 0);\r\n            ctx.lineTo(this.xOrigin, ctx.canvas.height);\r\n            ctx.stroke();\r\n        }\r\n        let drawPoints = (ctx) => {\r\n            ctx.beginPath();\r\n            ctx.fillStyle = COLORS.blue;\r\n            for (let i = 0; i < this.props.points.length; i++) {\r\n                const [x, y] = this.planeToScreenSpace(this.props.points[i][0], this.props.points[i][1]);\r\n                ctx.moveTo(x, y);\r\n                ctx.arc(x, y, pointRadius, 0, 2*Math.PI);\r\n            }\r\n            ctx.fill();\r\n        }\r\n        let drawScaleText = (ctx) => {\r\n            let spaceBetweenLines = linesBetweenTexts * this.drawEveryNthLine;\r\n\r\n            let screenSide = this.screenToPlaneSpace(0, 0);\r\n\r\n            let firstDrawX = Math.floor(screenSide[0] / spaceBetweenLines) * spaceBetweenLines;\r\n            let firstDrawY = Math.floor(screenSide[1] / spaceBetweenLines) * spaceBetweenLines;\r\n            let firstDrawPixel = this.planeToScreenSpace(firstDrawX, firstDrawY);\r\n\r\n            ctx.font = \"20px Arial\";\r\n\t\t\tctx.fillStyle = COLORS.blackDark;\r\n\r\n            const RoundingFactor = 1_000_000_000_00;\r\n\r\n            let i = 0;\r\n            let pos = firstDrawPixel[0] + textXOffsetFromCenter;\r\n            while (pos < ctx.canvas.width) {\r\n                let num = Math.round((firstDrawX + i * spaceBetweenLines) * RoundingFactor) / RoundingFactor;\r\n                if (num !== 0)\r\n                    ctx.fillText(num, pos, textYOffsetFromCenter + this.yOrigin);\r\n                i++;\r\n                pos += this.scale * spaceBetweenLines;\r\n            }\r\n            i = 0;\r\n            pos = firstDrawPixel[1] + textYOffsetFromCenter;\r\n            while (pos < ctx.canvas.height) {\r\n                let num = Math.round((firstDrawY + i * spaceBetweenLines) *  RoundingFactor) / RoundingFactor;\r\n                if (num !== 0)\r\n                    ctx.fillText(num, textXOffsetFromCenter + this.xOrigin, pos);\r\n                i--;\r\n                pos += this.scale * spaceBetweenLines;\r\n            }\r\n\r\n            // Points (1, 0) and (0, 1)\r\n            /*\r\n            let point1_1 = this.screenToPlaneSpace(this.xOrigin + this.scale * this.drawEveryNthLine, this.yOrigin - this.scale * this.drawEveryNthLine);\r\n            ctx.fillText(point1_1[0].toString(), this.xOrigin + this.scale * this.drawEveryNthLine + textXOffsetFromCenter, this.yOrigin + textYOffsetFromCenter);\r\n            ctx.fillText(point1_1[1].toString(), this.xOrigin + textXOffsetFromCenter, this.yOrigin - this.scale* this.drawEveryNthLine + textYOffsetFromCenter);\r\n            //*/\r\n        }\r\n        let drawFunction = (ctx, funcObject, color) => {\r\n            ctx.lineWidth = functionLineWidth;\r\n            ctx.strokeStyle = color;\r\n            ctx.beginPath();\r\n\r\n            let smallestSample = functions[funcObject[1]][5];\r\n            let biggestSample = functions[funcObject[1]][6];\r\n\r\n            let startScreenPos = smallestSample === undefined ? 0 : Math.max(this.planeToScreenSpace(smallestSample, 0)[0], 0);\r\n            let endScreenPos = biggestSample === undefined ? ctx.canvas.width : Math.min(this.planeToScreenSpace(biggestSample, 0)[0], ctx.canvas.width);\r\n            let interval = (endScreenPos-startScreenPos) / samplesInFunction;\r\n\r\n\t\t    for (let xP = startScreenPos; xP < endScreenPos; xP += interval) {\r\n\t\t\t    let x = this.screenToPlaneSpace(xP, 0)[0];\r\n\t\t\t    let yP = this.planeToScreenSpace(0, funcObject[0](x))[1];\r\n\t\t\t\r\n\t\t\t    ctx.lineTo(xP, Math.max(0, Math.min(yP, ctx.canvas.height)));\r\n\t\t    }\r\n\t\t    ctx.stroke();\r\n        }\r\n        let drawFunctionFormula = (ctx, funcObject, color, xPos, yPos) => {\r\n\r\n            // Draw error\r\n            ctx.fillStyle = functionColor[7];/*Gray*/\r\n            ctx.font = \"15px Arial\";\r\n            ctx.fillText(\"Error \" + RoundToDecimals(funcObject[3], Math.pow(10, 10)), xPos, yPos+15);\r\n\r\n            // Draw formula\r\n            ctx.font = \"25px Arial\";\r\n            ctx.fillStyle = functionColor[7];/*Gray*/\r\n            ctx.fillText(funcObject[2], xPos+1, yPos+1); // Backdrop\r\n\t\t\tctx.fillStyle = color;\r\n            ctx.fillText(funcObject[2], xPos, yPos);\r\n\r\n        }\r\n\r\n\r\n        let ctx = this.ctx;\r\n        if (ctx === undefined) {\r\n            console.error(\"Canvas context was undefined!\");\r\n            return;\r\n        }\r\n        ctx.lineWidth = 1;\r\n        \r\n        drawBG(ctx);\r\n        drawScaleLines(ctx);\r\n        for (let i = 0; i < this.renderingFunctionObjects.length; i++)\r\n            drawFunction(ctx, this.renderingFunctionObjects[i], functionColor[i]);\r\n        drawAxis(ctx);\r\n        drawPoints(ctx);\r\n        drawScaleText(ctx);\r\n        for (let i = 0; i < this.renderingFunctionObjects.length; i++)\r\n            drawFunctionFormula(ctx, this.renderingFunctionObjects[i], functionColor[i], 30, window.innerHeight - 50*i - 30);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ScreenView\r\n                init={this.initCanvas}\r\n                draw={this.draw}\r\n                zoom={this.zoom}\r\n                addDataPoint={() => {}}\r\n                canvasDrag={this.canvasDrag}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction GetBestFuncs(points) {\r\n    let x = Array(points.length);\r\n    let y = Array(points.length);\r\n    for (let i = 0; i < points.length; i++) {\r\n        x[i] = points[i][0];\r\n        y[i] = points[i][1];\r\n    }\r\n\r\n    /* [ ... [func, i, leastSquares, params] ... ] */\r\n    let functionApproximates = [];\r\n    let functionApproximateIndex = 0;\r\n\r\n    for (let i = 0; i < functions.length; i++) {\r\n        if (points.length < functions[i][7])\r\n            continue;\r\n\r\n        let params = functions[i][2](x, y);\r\n        \r\n        const leastSquaresMultiplier = functions[i][4];\r\n        functionApproximates[functionApproximateIndex] = [\r\n            function(x) { return functions[i][1](x, params); }, \r\n            i, \r\n            -1,/*Placeholder*/\r\n            params\r\n        ];\r\n        functionApproximates[functionApproximateIndex][2] = \r\n            leastSquaresMultiplier * getLeastSquares(functionApproximates[functionApproximateIndex][0], x, y);\r\n\r\n        functionApproximateIndex++\r\n    }\r\n\r\n    functionApproximates.sort(function(a, b) { return (a[2] < b[2] ? -1 : 1); })\r\n\r\n    /* [ ... [func, i, stringFormula, error], [func, i, stringFormula, error] ... ] */\r\n    let functionsToShow = [];\r\n\r\n    for (let i = 0; i < maxShowFuncAmount; i++) {\r\n        if (i !== 0 && functionApproximates[i][2] > leastSquaresTreshold)\r\n            break;\r\n\r\n        functionsToShow.push([\r\n            functionApproximates[i][0], \r\n            functionApproximates[i][1], \r\n            GetStringFormula(functionApproximates[i][1], functionApproximates[i][3]),\r\n            functionApproximates[i][2]\r\n        ]);\r\n    }\r\n\r\n    return functionsToShow;\r\n}\r\n\r\nfunction RoundToDecimals(number, tenthPower) { return Math.round((number + Number.EPSILON) * tenthPower) / tenthPower; }\r\n\r\nfunction GetStringFormula(i, params) {\r\n    const tenthPower = Math.pow(10, decimals);\r\n    let RoundCorrectDecimals = (number) => RoundToDecimals(number, tenthPower);\r\n\r\n    let str = functions[i][3]\r\n\r\n    let nextParamIndex = params.length - 1;\r\n\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (str[i] !== '_') \r\n            continue;\r\n        \r\n        if (params[nextParamIndex] < 0) {\r\n            // if there is a + before, switch it to -\r\n            if (i - 2 > 0 && str[i - 2] == '+') {\r\n                str = str.slice(0, i-2) + '-' + str.slice(i-1);\r\n                str = str.slice(0, i) + RoundCorrectDecimals(Math.abs(params[nextParamIndex])) + str.slice(i+1);\r\n            }\r\n            else if (i - 1 > 0 && str[i - 1] == '+') {\r\n                str[i - 1] = '-';\r\n                str = str.slice(0, i) + RoundCorrectDecimals(Math.abs(params[nextParamIndex])) + str.slice(i+1);\r\n            }\r\n            else {\r\n                str = str.slice(0, i) + RoundCorrectDecimals(params[nextParamIndex]) + str.slice(i+1);;\r\n            }\r\n        }\r\n        else {\r\n            str = str.slice(0, i) + RoundCorrectDecimals(params[nextParamIndex]) + str.slice(i+1);\r\n        }\r\n        nextParamIndex--;\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nfunction calculateBestPolynomial(coefficentAmount, x, y) {\r\n    let matrix_invert = (M) => {\r\n\t\tif(M.length !== M[0].length){return;}\r\n\t\t\r\n\t\tvar i=0, ii=0, j=0, dim=M.length, e=0, t=0;\r\n\t\tvar I = [], C = [];\r\n\t\tfor(i=0; i<dim; i+=1){\r\n\t\t\tI[I.length]=[];\r\n\t\t\tC[C.length]=[];\r\n\t\t\tfor(j=0; j<dim; j+=1){\r\n\t\t\t\tif(i===j){ I[i][j] = 1; }\r\n\t\t\t\telse{ I[i][j] = 0; }\r\n\t\t\t\t\r\n\t\t\t\tC[i][j] = M[i][j];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor(i=0; i<dim; i+=1){\r\n\t\t\te = C[i][i];\r\n\t\t\t\r\n\t\t\tif(e===0){\r\n\t\t\t\tfor(ii=i+1; ii<dim; ii+=1){\r\n\t\t\t\t\tif(C[ii][i] !== 0){\r\n\t\t\t\t\t\tfor(j=0; j<dim; j++){\r\n\t\t\t\t\t\t\te = C[i][j];       //temp store i'th row\r\n\t\t\t\t\t\t\tC[i][j] = C[ii][j];//replace i'th row by ii'th\r\n\t\t\t\t\t\t\tC[ii][j] = e;      //repace ii'th by temp\r\n\t\t\t\t\t\t\te = I[i][j];       //temp store i'th row\r\n\t\t\t\t\t\t\tI[i][j] = I[ii][j];//replace i'th row by ii'th\r\n\t\t\t\t\t\t\tI[ii][j] = e;      //repace ii'th by temp\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\te = C[i][i];\r\n\t\t\t\tif(e===0){return}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(j=0; j<dim; j++){\r\n\t\t\t\tC[i][j] = C[i][j]/e; //apply to original matrix\r\n\t\t\t\tI[i][j] = I[i][j]/e; //apply to identity\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(ii=0; ii<dim; ii++){\r\n\t\t\t\tif(ii===i){continue;}\r\n\t\t\t\t\r\n\t\t\t\te = C[ii][i];\r\n\t\t\t\t\r\n\t\t\t\tfor(j=0; j<dim; j++){\r\n\t\t\t\t\tC[ii][j] -= e*C[i][j]; //apply to original matrix\r\n\t\t\t\t\tI[ii][j] -= e*I[i][j]; //apply to identity\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn I;\r\n\t}\r\n\r\n\tlet matrixA = zeros(coefficentAmount, coefficentAmount)\r\n\tlet matrixB = zeros(1, coefficentAmount);\r\n\tlet matAValues = [];//Array(2*coefficentAmount-1);\r\n\tfor (let i = 0; i < 2*coefficentAmount-1; i++) {\r\n\t\tmatAValues[i] = 0;\r\n\t\tfor (let j = 0; j < x.length; j++)\r\n\t\t\tmatAValues[i] += Math.pow(x[j], i);\r\n\t}\r\n\t// Set the values to the matrix\r\n\tmatrixA = matrixA.map(function(value, index) {\r\n\t\treturn matAValues[index[0]+index[1]];\r\n\t});\r\n\tmatrixB = matrixB.map(function(value, index, matrix){\r\n\t\tlet newValue = 0;\r\n\t\tfor (let i = 0; i < x.length; i++)\r\n\t\t\tnewValue += y[i] * Math.pow(x[i], index[1]);\r\n\t\treturn newValue\r\n\t});\r\n\tlet matrixAT = matrix_invert(matrixA._data);\r\n\r\n\t// Then just the final multiply\r\n\tlet matrixC = multiply(matrixB, matrixAT);\r\n    return matrixC._data[0];\r\n}\r\n\r\nfunction useNonLinearRegression(funcIndex, iteration, x, y) {\r\n    let variableCount = functions[funcIndex][3].split('_').length - 1;\r\n    let initialValues = Array(variableCount).fill(1);\r\n\r\n    return nonLinearRegression(functions[funcIndex][0], initialValues, x, y, {maxIter: iteration,display:false});\r\n}\r\n\r\nfunction nonLinearRegression(fun,Parm0,x,y,Opt) {\r\n\tif(!Opt){Opt={}};\r\n\tif(!Opt.maxIter){Opt.maxIter=1000};\r\n\tif(!Opt.step){// initial step is 1/100 of initial value (remember not to use zero in Parm0)\r\n\t\tOpt.step=Parm0.map(function(p){return p/100});\r\n\t\tOpt.step=Opt.step.map(function(si){if(si==0){return 1}else{ return si}}); // convert null steps into 1's\r\n\t};\r\n\tif(typeof(Opt.display)=='undefined'){Opt.display=true};\r\n\tif(!Opt.objFun){Opt.objFun=function(y,yp){return y.map(function(yi,i){return Math.pow((yi-yp[i]),2)}).reduce(function(a,b){return a+b})}} //SSD\r\n\t\r\n\tvar cloneVector=function(V){return V.map(function(v){return v})};\r\n\tvar P0=cloneVector(Parm0),P1=cloneVector(Parm0);\r\n\tvar n = P0.length;\r\n\tvar step=Opt.step;\r\n\tvar funParm=function(P){return Opt.objFun(y,fun(x,P))}//function (of Parameters) to minimize\r\n\t// silly multi-univariate screening\r\n\tfor(var i=0;i<Opt.maxIter;i++) {\r\n\t\tfor(var j=0;j<n;j++){ // take a step for each parameter\r\n\t\t\tP1=cloneVector(P0);\r\n\t\t\tP1[j]+=step[j];\r\n\t\t\tif(funParm(P1)<funParm(P0)) { // if parm value going in the righ direction\r\n\t\t\t\tstep[j]=1.2*step[j]; // then go a little faster\r\n\t\t\t\tP0=cloneVector(P1);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tstep[j]=-(0.5*step[j]); // otherwiese reverse and go slower\r\n\t\t\t}\t\r\n\t\t}\r\n        // display\r\n\t\t//if(Opt.display){if(i>(Opt.maxIter-10)){console.log(i+1,funParm(P0),P0)}}\r\n\t}\r\n\treturn P0;\r\n};\r\nfunction getLeastSquares(func, x, y) {\r\n    let total = 0;\r\n    for (let i = 0; i < x.length; i++)\r\n        total += Math.pow(func(x[i]) - y[i], 2);\r\n    return total / x.length;\r\n}\r\n\r\n\r\nexport default CoordinatePlane;","import {React, useState} from 'react'\r\nimport COLORS from './colors.js'\r\nimport './index.css'\r\nimport './App.css'\r\nimport {Navbar, Button, Col, Form, Row } from 'react-bootstrap'\r\n\r\nfunction TopBar(props) {\r\n    const { addPoint } = props; \r\n    const btnStyle = { backgroundColor: COLORS.yellowDark, borderColor: COLORS.yellowDark };\r\n    const [yFieldValue, setYFieldValue] = useState(\"\");\r\n    const [xFieldValue, setXFieldValue] = useState(\"\");\r\n    const [xInvalid, setXInvalid] = useState(false);\r\n    const [yInvalid, setYInvalid] = useState(false);\r\n\r\n    function addPointEvent() {\r\n        let invalid = xFieldValue === \"\" || yFieldValue === \"\"\r\n        setXInvalid(xFieldValue === \"\");\r\n        setYInvalid(yFieldValue === \"\");\r\n        if (invalid) return;\r\n\r\n        setYFieldValue(\"\");\r\n        setXFieldValue(\"\");\r\n        addPoint(Number(xFieldValue), Number(yFieldValue));\r\n    }\r\n\r\n    const changeFocusingField = (event, delta) => {\r\n        let key = event.key.toLowerCase();\r\n\r\n        const acceptedKeys = [\"enter\"];\r\n        const switchIfCaretAtRightmost = [\"arrowright\"];\r\n        const switchIfCaretAtLeftmost = [\"arrowleft\"];\r\n\r\n        if (acceptedKeys.includes(key)\r\n            || (switchIfCaretAtRightmost.includes(key) && event.target.selectionStart == event.target.defaultValue.length)\r\n            || (switchIfCaretAtLeftmost.includes(key) && event.target.selectionStart == 0))\r\n        {\r\n            //event.target.selectionStart = event.target.defaultValue.length;\r\n            const form = event.target.form;\r\n            const index = [...form].indexOf(event.target);\r\n            form.elements[index + delta].focus();\r\n            event.preventDefault();\r\n        }\r\n        \r\n    }\r\n\r\n    const ValidateFieldAsNumber = (onInputEvent) => {\r\n        return onInputEvent.target.value\r\n            /* Convert commas to dots */\r\n            .replace(',', '.')\r\n            // Allow only numbers, a dot and a negative sign\r\n            .replace(/[^0-9.,-]/g, '')\r\n            // Don't allow for a dot if there already exists a dot\r\n            .replace(/(\\..*)\\./g, '$1')\r\n            // Don't allow for a negative sign if this isn't the first character\r\n            .replace(/(?<=.)[-]/g, '')\r\n    }\r\n\r\n    return (\r\n        <Navbar style={{background: COLORS.turquoise}} expand=\"lg\" sticky=\"top\">\r\n            <Col>\r\n                <div className=\"leftSide\">\r\n                    <h7 className=\"logoText\">Find a Function</h7>\r\n\r\n                    <Button style={btnStyle} onClick={() => props.clear()}>Clear</Button>\r\n                </div>\r\n            </Col>\r\n\r\n            <Col>\r\n                <div className=\"center\">\r\n                    <Button style={btnStyle} disabled={!props.findingDone} onClick={() => props.startFunctionFind()}>{props.findingDone ? \"Start Find\" : \"Finding...\"}</Button>\r\n                </div>\r\n            </Col>\r\n\r\n            <Col>\r\n                <div className=\"rightSide\">\r\n                    <Form>\r\n                        <Row>\r\n                            <Col className=\"numberField\">\r\n                                <Form.Control isInvalid={xInvalid} size=\"sm\" type=\"text\" placeholder=\"X-Coord\" \r\n                                    value={xFieldValue} onInput={(event) => setXFieldValue(ValidateFieldAsNumber(event))}\r\n                                    onKeyDown={(event) => {changeFocusingField(event, 1)}}/>\r\n                            </Col>\r\n                            <Col className=\"numberField\">\r\n                                <Form.Control style={{\"vertical-align\": \"middle\"}} isInvalid={yInvalid} size=\"sm\" type=\"text\" placeholder=\"Y-Coord\"\r\n                                    value={yFieldValue} onInput={(event) => setYFieldValue(ValidateFieldAsNumber(event))}\r\n                                    onKeyDown={(event) => {\r\n                                        changeFocusingField(event, -1);\r\n                                        if (event.key.toLowerCase() === \"enter\")\r\n                                            addPointEvent();\r\n                                    }}/>\r\n                            </Col>\r\n                            <Col style={{width: \"20%\"}}>\r\n                                <Button style={btnStyle} onClick={addPointEvent}>Add</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </Col>\r\n\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default TopBar;","import './App.css';\nimport { React, useState } from 'react';\nimport CoordinatePlane from './canvas/CoordinatePlane';\nimport TopBar from './TopBar.js';\n\nfunction App() {\n  const [points, setPoints] = useState([]);\n  const [clearBoardFlag, setClearBoardFlag] = useState(false);\n\n  const [findingBestLine, setFindingBestLine] = useState(false);\n  const [findingDone, setFindingDone] = useState(true);\n\n  function addPoint(x, y) {\n    setPoints([...points, [x, y]]);\n  }\n  function clear() {\n    setPoints([]);\n    setClearBoardFlag(!clearBoardFlag);\n  }\n  function startFunctionFind() {\n    setFindingBestLine(true);\n    setFindingDone(false);\n  }\n  function stopFunctionFind() {\n    setFindingBestLine(false);\n    setFindingDone(true);\n  }\n\n  return (\n    <div>\n      <TopBar addPoint={addPoint} clear={clear} findingDone={findingDone} startFunctionFind={startFunctionFind}/>\n      <CoordinatePlane clearBoardFlag={clearBoardFlag} points={points} findingBestLine={findingBestLine} stopFunctionFind={stopFunctionFind}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}