{"version":3,"sources":["canvas/ExtendedCanvas.js","canvas/ScreenView.js","canvas/FunctionData.js","canvas/CoordinatePlane.js","TopBar.js","App.js","index.js"],"names":["ExtendedCanvas","draw","init","zoom","canvasRef","useRef","useState","window","innerWidth","setWidth","innerHeight","setHeight","firstUpdate","setFirstUpdate","updateWidthAndHeight","callZoom","event","deltaY","preventDefault","useEffect","canvas","current","context","getContext","width","height","style","left","top","position","addEventListener","passive","removeEventListener","ScreenView","props","canvasDrag","addDataPoint","rest","delta","lastMousePositionX","lastMousePositionY","isMouseDown","setMouseDown","hasDragged","setHasDragged","setLastMousePositionX","setLastMousePositionY","id","className","onTouchStart","touch","touches","clientX","clientY","onTouchEnd","onTouchMove","differenceX","differenceY","onMouseMove","nativeEvent","offsetX","offsetY","onMouseDown","onMouseUp","ref","FunctionData","a","P","map","x","y","calculateBestPolynomial","Infinity","Math","pow","exp","useNonLinearRegression","sin","log","coefficentAmount","matrixA","zeros","matrixB","matAValues","i","j","length","value","index","matrix","newValue","matrixAT","M","ii","dim","e","I","C","matrix_invert","_data","multiply","funcIndex","iteration","variableCount","split","initialValues","Array","fill","fun","Parm0","Opt","maxIter","step","p","si","display","objFun","yp","yi","reduce","b","cloneVector","V","v","P0","P1","n","funParm","nonLinearRegression","maxScale","minScale","functionColor","COLORS","CoordinatePlane","ctx","undefined","scale","drawEveryNthLine","xOrigin","yOrigin","renderingFunctionObjects","initCanvas","componentDidUpdate","prevProps","prevState","clearBoardFlag","findingBestLine","functionIndex","GetBestFuncs","points","GetBestFunctionOfType","minPointAmount","possiblePlural","showAlertPopup","stopFunctionFind","planeToScreenSpace","xPDifference","yPDifference","screenToPlaneSpace","normalizedX","normalizedY","zoomMultiplyCounter","mouseX","mouseY","change","console","mouseBefore","mouseBeforeScreen","drawFunction","funcObject","color","lineWidth","strokeStyle","beginPath","smallestSample","biggestSample","startScreenPos","max","endScreenPos","min","interval","xP","yP","lineTo","stroke","drawFunctionFormula","xPos","yPos","fillStyle","font","fillText","RoundToDecimals","fillRect","drawBG","lineSpace","startDraw","moveTo","drawScaleLines","drawAxis","arc","PI","drawPoints","spaceBetweenLines","screenSide","firstDrawX","floor","firstDrawY","firstDrawPixel","RoundingFactor","pos","num","round","drawScaleText","error","this","Component","ConvertPointsToXYArrays","functionApproximates","functionApproximateIndex","params","leastSquaresMultiplier","getLeastSquares","sort","functionsToShow","push","GetStringFormula","number","tenthPower","Number","EPSILON","RoundCorrectDecimals","str","nextParamIndex","slice","abs","func","total","TopBar","addPoint","clear","findingDone","startFunctionFind","setFunctionIndex","yFieldValue","setYFieldValue","xFieldValue","setXFieldValue","xInvalid","setXInvalid","yInvalid","setYInvalid","addPointEvent","invalid","changeFocusingField","key","toLowerCase","includes","target","selectionStart","defaultValue","form","indexOf","elements","focus","ValidateFieldAsNumber","onInputEvent","replace","BestFitText","Navbar","expand","sticky","Col","Button","onClick","Nav","NavDropdown","title","onSelect","Dropdown","Item","as","eventKey","disabled","Form","Control","isInvalid","size","type","placeholder","onInput","onKeyDown","App","setPoints","setClearBoardFlag","setFindingBestLine","setFindingDone","alertPopup","setAlertPopup","alertRef","StartAlertSequence","text","classList","toggle","setTimeout","ContainsXValue","Alert","variant","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03266386.chunk.js","sourcesContent":["import { useRef, useEffect, useState } from 'react'\r\n\r\nconst ExtendedCanvas = (draw, init, zoom) => {\r\n  \r\n  const canvasRef = useRef(null)\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [height, setHeight] = useState(window.innerHeight);\r\n  const [firstUpdate, setFirstUpdate] = useState(true);\r\n  \r\n  const updateWidthAndHeight = () => {\r\n    setWidth(window.innerWidth);\r\n    setHeight(window.innerHeight);\r\n  };\r\n\r\n  const callZoom = (event) => {\r\n    zoom(event.deltaY);\r\n    event.preventDefault();\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext('2d')\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n    canvas.style.left = \"0px\";\r\n    canvas.style.top = \"0px\";\r\n    canvas.style.position = \"absolute\";\r\n    if (firstUpdate) {\r\n      setFirstUpdate(false);\r\n      init(context);\r\n    }\r\n    draw(context);\r\n\r\n    window.addEventListener(\"resize\", updateWidthAndHeight);\r\n    window.addEventListener(\"wheel\", callZoom, { passive: false });\r\n    return () => {window.removeEventListener(\"resize\", updateWidthAndHeight);\r\n                  window.removeEventListener(\"wheel\", callZoom, { passive: false });}\r\n  }, [firstUpdate, callZoom, draw, init])\r\n  \r\n  return canvasRef;\r\n}\r\n\r\nexport default ExtendedCanvas;","import React, { useState } from 'react';\r\nimport ExtendedCanvas from './ExtendedCanvas.js'\r\n\r\nconst ScreenView = props => { \r\n    const callZoom = (delta) => {\r\n        zoom(delta, lastMousePositionX, lastMousePositionY);\r\n    }\r\n\r\n    const { init, draw, zoom, canvasDrag, addDataPoint, ...rest } = props;\r\n    const canvasRef = ExtendedCanvas(draw, init, callZoom);\r\n    \r\n    const [isMouseDown, setMouseDown] = useState(false);\r\n    const [hasDragged, setHasDragged] = useState(false);\r\n    const [lastMousePositionX, setLastMousePositionX] = useState(0);\r\n    const [lastMousePositionY, setLastMousePositionY] = useState(0);\r\n    \r\n    const mouseDown = ({nativeEvent}) => {\r\n        setMouseDown(true);\r\n        setHasDragged(false);\r\n        const {offsetX, offsetY} = nativeEvent;\r\n        setLastMousePositionX(offsetX);\r\n        setLastMousePositionY(offsetY);\r\n    }\r\n    const mouseMove = ({nativeEvent}) => {\r\n        const {offsetX, offsetY} = nativeEvent;\r\n        setLastMousePositionX(offsetX);\r\n        setLastMousePositionY(offsetY);\r\n        \r\n        if (isMouseDown) {\r\n            setHasDragged(true);\r\n            let differenceX = lastMousePositionX - offsetX;\r\n            let differenceY = lastMousePositionY - offsetY;\r\n            canvasDrag(differenceX, differenceY);\r\n        }\r\n    }\r\n    const mouseUp = ({nativeEvent}) => {\r\n        setMouseDown(false);\r\n        if (!hasDragged) {\r\n            // It's a click. Add a point\r\n            const {offsetX, offsetY} = nativeEvent;\r\n            addDataPoint(offsetX, offsetY);\r\n        }\r\n    }\r\n\r\n    const touchDown = (event) => {\r\n        setMouseDown(true);\r\n        setHasDragged(false);\r\n        let touch = event.touches[0];\r\n        setLastMousePositionX(touch.clientX);\r\n        setLastMousePositionY(touch.clientY);\r\n    }\r\n    const touchMove = (event) => {\r\n        setHasDragged(true);\r\n        let touch = event.touches[0];\r\n        let differenceX = lastMousePositionX - touch.clientX;\r\n        let differenceY = lastMousePositionY - touch.clientY;\r\n        setLastMousePositionX(touch.clientX);\r\n        setLastMousePositionY(touch.clientY);\r\n        canvasDrag(differenceX, differenceY);\r\n    }\r\n    const touchUp = (event) => {\r\n        setMouseDown(false);\r\n        if (!hasDragged) {\r\n            // It's a click. Add a point\r\n            addDataPoint(lastMousePositionX, lastMousePositionY);\r\n        }\r\n    }\r\n    \r\n    /* \r\n    window.addEventListener('wheel', (event) => {\r\n        zoom(event.deltaY);\r\n        event.preventDefault();\r\n    }, { passive: false });\r\n    */\r\n\r\n    return (\r\n        <canvas id=\"canvas\" className=\"canvas\" onTouchStart={touchDown} onTouchEnd={touchUp} onTouchMove={touchMove}\r\n        onMouseMove={mouseMove} onMouseDown={mouseDown} onMouseUp={mouseUp} ref={canvasRef} {...rest}/>\r\n        /*document.getElementById(\"canvas\").addEventListener('wheel',function(event){\r\n            onScroll(event);\r\n            return false; \r\n        }, false)*/\r\n    )\r\n}\r\n  \r\nexport default ScreenView;","import { zeros, multiply } from \"mathjs\";\r\n\r\n/* \r\n\r\nf[0] = function as a map, \r\nf[1] = function - normal version, \r\nf[2] = method to find best-fit, \r\nf[3] = string formula (params with _)\r\nf[4] = least squares multiplier\r\nf[5] = smallest sample (use if function is not defined everywhere)\r\nf[6] = biggest sample (use if function is not defined everywhere)\r\nf[7] = min amount of data points required\r\n\r\nLeast Squares multiplier:\r\nIf many curves get the same evaluation, the program will pick the one that has\r\nsmaller least square multiplier. For example if both Order 5 polynomial \r\nand a line get the same evaluation, a line is better\r\n\r\n*/\r\n\r\nexport const FunctionData = [ \r\n    [ /* Line */\r\n        function(a, P) { return a.map(function(x) { return P[0] + x * P[1] })},\r\n        function(x, P)                            { return P[0] + x * P[1] },\r\n        function(x, y) { return calculateBestPolynomial(2, x, y) },\r\n        \"_x + _\",\r\n        1,\r\n        -Infinity,\r\n        Infinity,\r\n        2\r\n    ],\r\n    [ /* Order 2 polynomial */\r\n        function(a, P) { return a.map(function(x) { return P[0] + x * P[1] + x * x * P[2] })},\r\n        function(x, P)                            { return P[0] + x * P[1] + x * x * P[2] },\r\n        function(x, y) { return calculateBestPolynomial(3, x, y) },\r\n        \"_x² + _x + _\",\r\n        2,\r\n        -Infinity,\r\n        Infinity,\r\n        3\r\n    ],\r\n    [ /* Order 3 polynomial */\r\n        function(a, P) { return a.map(function(x) { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3] })},\r\n        function(x, P)                            { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3] },\r\n        function(x, y) { return calculateBestPolynomial(4, x, y) },\r\n        \"_x³ + _x² + _x + _\",\r\n        3,\r\n        -Infinity,\r\n        Infinity,\r\n        4\r\n    ],\r\n    [ /* Order 4 polynomial */\r\n        function(a, P) { return a.map(function(x) { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3]+Math.pow(x, 4)*P[4] })},\r\n        function(x, P)                            { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3]+Math.pow(x, 4)*P[4] },\r\n        function(x, y) { return calculateBestPolynomial(5, x, y) },\r\n        \"_x⁴ + _x³ + _x² + _x + _\",\r\n        4,\r\n        -Infinity,\r\n        Infinity,\r\n        5\r\n    ],\r\n    [ /* Order 5 polynomial */\r\n        function(a, P) { return a.map(function(x) { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3]+Math.pow(x, 4)*P[4]+Math.pow(x, 5)*P[5] })},\r\n        function(x, P)                            { return P[0]+x*P[1]+x*x*P[2]+Math.pow(x, 3)*P[3]+Math.pow(x, 4)*P[4]+Math.pow(x, 5)*P[5] },\r\n        function(x, y) { return calculateBestPolynomial(6, x, y) },\r\n        \"_x⁵ + _x⁴ + _x³ + _x² + _x + _\",\r\n        5,\r\n        -Infinity,\r\n        Infinity,\r\n        6\r\n    ],\r\n    [ /* Natural Exponent */\r\n        function(a, P) { return a.map(function(x) { return P[0] * Math.exp(P[1] * x) + P[2] })},\r\n        function(x, P)                            { return P[0] * Math.exp(P[1] * x) + P[2] },\r\n        function(x, y) { return useNonLinearRegression(5, 5000, x, y) },\r\n        \"_e^(_x) + _\",\r\n        1,\r\n        -Infinity,\r\n        Infinity,\r\n        1\r\n    ],\r\n    [ /* Sin */\r\n        function(a, P) { return a.map(function(x) { return P[0] * Math.sin(P[1] * x + P[2]) + P[3] })},\r\n        function(x, P)                            { return P[0] * Math.sin(P[1] * x + P[2]) + P[3] },\r\n        function(x, y) { return  useNonLinearRegression(6, 5000, x, y) },\r\n        \"_ · sin(_x + _) + _\",\r\n        3,\r\n        -Infinity,\r\n        Infinity,\r\n        4\r\n    ],\r\n    [ /* natural logarithmic */\r\n        function(a, P) { return a.map(function(x) { return P[0] * Math.log(P[1] * x) })},\r\n        function(x, P)                            { return P[0] * Math.log(P[1] * x) },\r\n        function(x, y) { return useNonLinearRegression(7, 5000, x, y) },\r\n        \"_ · ln(_x)\",\r\n        1,\r\n        0.000000000001,\r\n        Infinity,\r\n        1\r\n    ],\r\n];\r\n\r\nexport default FunctionData;\r\n\r\n\r\n\r\nfunction calculateBestPolynomial(coefficentAmount, x, y) {\r\n    let matrix_invert = (M) => {\r\n\t\tif(M.length !== M[0].length){return;}\r\n\t\t\r\n\t\tvar i=0, ii=0, j=0, dim=M.length, e=0;\r\n\t\tvar I = [], C = [];\r\n\t\tfor(i=0; i<dim; i+=1){\r\n\t\t\tI[I.length]=[];\r\n\t\t\tC[C.length]=[];\r\n\t\t\tfor(j=0; j<dim; j+=1){\r\n\t\t\t\tif(i===j){ I[i][j] = 1; }\r\n\t\t\t\telse{ I[i][j] = 0; }\r\n\t\t\t\t\r\n\t\t\t\tC[i][j] = M[i][j];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor(i=0; i<dim; i+=1){\r\n\t\t\te = C[i][i];\r\n\t\t\t\r\n\t\t\tif(e===0){\r\n\t\t\t\tfor(ii=i+1; ii<dim; ii+=1){\r\n\t\t\t\t\tif(C[ii][i] !== 0){\r\n\t\t\t\t\t\tfor(j=0; j<dim; j++){\r\n\t\t\t\t\t\t\te = C[i][j];       //temp store i'th row\r\n\t\t\t\t\t\t\tC[i][j] = C[ii][j];//replace i'th row by ii'th\r\n\t\t\t\t\t\t\tC[ii][j] = e;      //repace ii'th by temp\r\n\t\t\t\t\t\t\te = I[i][j];       //temp store i'th row\r\n\t\t\t\t\t\t\tI[i][j] = I[ii][j];//replace i'th row by ii'th\r\n\t\t\t\t\t\t\tI[ii][j] = e;      //repace ii'th by temp\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\te = C[i][i];\r\n\t\t\t\tif(e===0){return}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(j=0; j<dim; j++){\r\n\t\t\t\tC[i][j] = C[i][j]/e; //apply to original matrix\r\n\t\t\t\tI[i][j] = I[i][j]/e; //apply to identity\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(ii=0; ii<dim; ii++){\r\n\t\t\t\tif(ii===i){continue;}\r\n\t\t\t\t\r\n\t\t\t\te = C[ii][i];\r\n\t\t\t\t\r\n\t\t\t\tfor(j=0; j<dim; j++){\r\n\t\t\t\t\tC[ii][j] -= e*C[i][j]; //apply to original matrix\r\n\t\t\t\t\tI[ii][j] -= e*I[i][j]; //apply to identity\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn I;\r\n\t}\r\n\r\n\tlet matrixA = zeros(coefficentAmount, coefficentAmount)\r\n\tlet matrixB = zeros(1, coefficentAmount);\r\n\tlet matAValues = [];//Array(2*coefficentAmount-1);\r\n\tfor (let i = 0; i < 2*coefficentAmount-1; i++) {\r\n\t\tmatAValues[i] = 0;\r\n\t\tfor (let j = 0; j < x.length; j++)\r\n\t\t\tmatAValues[i] += Math.pow(x[j], i);\r\n\t}\r\n\t// Set the values to the matrix\r\n\tmatrixA = matrixA.map(function(value, index) {\r\n\t\treturn matAValues[index[0]+index[1]];\r\n\t});\r\n\tmatrixB = matrixB.map(function(value, index, matrix){\r\n\t\tlet newValue = 0;\r\n\t\tfor (let i = 0; i < x.length; i++)\r\n\t\t\tnewValue += y[i] * Math.pow(x[i], index[1]);\r\n\t\treturn newValue\r\n\t});\r\n\tlet matrixAT = matrix_invert(matrixA._data);\r\n\r\n\t// Then just the final multiply\r\n\tlet matrixC = multiply(matrixB, matrixAT);\r\n    return matrixC._data[0];\r\n}\r\n\r\nfunction useNonLinearRegression(funcIndex, iteration, x, y) {\r\n    let variableCount = FunctionData[funcIndex][3].split('_').length - 1;\r\n    let initialValues = Array(variableCount).fill(1);\r\n\r\n    return nonLinearRegression(FunctionData[funcIndex][0], initialValues, x, y, {maxIter: iteration,display:false});\r\n}\r\n\r\nfunction nonLinearRegression(fun,Parm0,x,y,Opt) {\r\n\tif(!Opt){Opt={}};\r\n\tif(!Opt.maxIter){Opt.maxIter=1000};\r\n\tif(!Opt.step){// initial step is 1/100 of initial value (remember not to use zero in Parm0)\r\n\t\tOpt.step=Parm0.map(function(p){return p/100});\r\n\t\tOpt.step=Opt.step.map(function(si){if(si===0){return 1}else{ return si}}); // convert null steps into 1's\r\n\t};\r\n\tif(typeof(Opt.display)=='undefined'){Opt.display=true};\r\n\tif(!Opt.objFun){Opt.objFun=function(y,yp){return y.map(function(yi,i){return Math.pow((yi-yp[i]),2)}).reduce(function(a,b){return a+b})}} //SSD\r\n\t\r\n\tvar cloneVector=function(V){return V.map(function(v){return v})};\r\n\tvar P0=cloneVector(Parm0),P1=cloneVector(Parm0);\r\n\tvar n = P0.length;\r\n\tvar step=Opt.step;\r\n\tvar funParm=function(P){return Opt.objFun(y,fun(x,P))}//function (of Parameters) to minimize\r\n\t// silly multi-univariate screening\r\n\tfor(var i=0;i<Opt.maxIter;i++) {\r\n\t\tfor(var j=0;j<n;j++){ // take a step for each parameter\r\n\t\t\tP1=cloneVector(P0);\r\n\t\t\tP1[j]+=step[j];\r\n\t\t\tif(funParm(P1)<funParm(P0)) { // if parm value going in the righ direction\r\n\t\t\t\tstep[j]=1.2*step[j]; // then go a little faster\r\n\t\t\t\tP0=cloneVector(P1);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tstep[j]=-(0.5*step[j]); // otherwiese reverse and go slower\r\n\t\t\t}\t\r\n\t\t}\r\n        // display\r\n\t\t//if(Opt.display){if(i>(Opt.maxIter-10)){console.log(i+1,funParm(P0),P0)}}\r\n\t}\r\n\treturn P0;\r\n};","import  { React, Component } from 'react'\r\nimport ScreenView from './ScreenView.js'\r\n\r\nimport { min, max } from \"mathjs\";\r\nimport FunctionData from './FunctionData.js';\r\n\r\nconst minSpaceBetweenLines = 20;\r\nconst maxSpaceBetweenLine = 50;\r\nconst zoomSpeed = 0.003;\r\nconst startZoom = 50;\r\nconst maxScale = 1_000_000_000_000;\r\nconst minScale = 0.000_000_0015;\r\n\r\nconst pointRadius = 6;\r\nconst samplesInFunction = 200;\r\nconst functionLineWidth = 5;\r\n// From colors.js blended halfway with white\r\nconst functionColor = [\r\n    '#F8E287'/*Yellow*/, '#8DDECE'/*turquoise*/, \r\n    '#9ACCED'/*Blue*/, '#CDACDB'/*Purple*/,\r\n    '#F3BF91'/*Orange*/, '#F3A69E'/*Red*/,\r\n    '#97E6B8'/*Green*/, '#9AA4AF'/*Gray*/\r\n]\r\n\r\nconst textXOffsetFromCenter = 0;\r\nconst textYOffsetFromCenter = -5;\r\nconst linesBetweenTexts = 5;\r\n\r\nconst maxShowFuncAmount = 3;\r\nconst leastSquaresTreshold = 1;\r\nconst decimals = 5;\r\n\r\nexport const COLORS = {\r\n    white: '#ffffff',\r\n    gray: '#ecf0f1',\r\n    grayDark: '#bdc3c7',\r\n    black: '#34495e',\r\n    blackDark: '#2c3e50',\r\n    yellow: '#f1c40f',\r\n    yellowDark: '#f39c12',\r\n    orange: '#e67e22',\r\n    orangeDark: '#d35400',\r\n    turquoise: '#1abc9c',\r\n    turquoiseDark: '#16a085',\r\n    blue: '#3498db',\r\n    purple: '#9b59b6',\r\n}\r\n\r\n\r\nclass CoordinatePlane extends Component {\r\n    ctx = undefined;\r\n    scale = startZoom;\r\n    drawEveryNthLine = 1;\r\n    xOrigin = undefined;\r\n    yOrigin = undefined;\r\n\r\n    /* [ ... [func, i, stringFormula, error], [func, i, stringFormula, error] ... ] */\r\n    renderingFunctionObjects = [];\r\n\r\n    initCanvas = (ctx) => {\r\n        this.ctx = ctx;\r\n        this.xOrigin = ctx.canvas.width / 2;\r\n        this.yOrigin = ctx.canvas.height / 2;\r\n    }\r\n\r\n    canvasDrag = (differenceX, differenceY) => {\r\n        this.xOrigin -= differenceX;\r\n        this.yOrigin -= differenceY;\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        // Clear update incoming\r\n        if (this.props.clearBoardFlag !== prevProps.clearBoardFlag) {\r\n            this.renderingFunctionObjects = []\r\n        }\r\n\r\n        // Start finding best line\r\n        if (this.props.findingBestLine === true && prevProps.findingBestLine === false)\r\n        {\r\n            this.renderingFunctionObjects = []\r\n\r\n            if (this.props.functionIndex === -1)\r\n                this.renderingFunctionObjects = GetBestFuncs(this.props.points);\r\n            else\r\n                this.renderingFunctionObjects = GetBestFunctionOfType(this.props.points, this.props.functionIndex);\r\n\r\n            if (this.renderingFunctionObjects.length === 0)\r\n            {\r\n                let minPointAmount = this.props.functionIndex === -1 ? \r\n                    1 : /* The least amount of points a any curve has, hardcoded to 1*/\r\n                    FunctionData[this.props.functionIndex][7];\r\n\r\n                let possiblePlural = minPointAmount == 1 ? \" point.\" : \" points.\";\r\n\r\n                this.props.showAlertPopup(\"Make sure to have at least \" + minPointAmount + possiblePlural);\r\n            }\r\n\r\n            this.props.stopFunctionFind();\r\n        }\r\n    }\r\n\r\n    planeToScreenSpace = (x, y) => {\r\n        // Multiply by the scale to get the pixel difference from the middle\r\n\t\tlet xPDifference = x * this.scale;\r\n\t\tlet yPDifference = y * -this.scale; // Use minus because the y axis is flipped in pixels\r\n\r\n\t\t// Add it to the pixel center coors to get the coords\r\n\t\tlet xP = this.xOrigin + xPDifference;\r\n\t\tlet yP = this.yOrigin + yPDifference; \r\n\r\n\t\treturn [xP, yP];\r\n    }\r\n    screenToPlaneSpace = (x, y) => {\r\n        // Set the planes 0 0 point to pixel 0 0.\r\n        let normalizedX = x - this.xOrigin;\r\n        let normalizedY = y - this.yOrigin;\r\n        // Divide by the scale to get the coordinates\r\n        let xScr = normalizedX / this.scale;\r\n        let yScr = normalizedY / -this.scale; // Use minus because the y axis is flipped in pixels\r\n        return [xScr, yScr];\r\n    }\r\n\r\n    // Zoom works like this: if the first non-zero number is a two, multiply by 5/2, else 2\r\n    zoomMultiplyCounter = 2;\r\n    zoom = (delta, mouseX, mouseY) => {\r\n        const change = delta * this.scale * zoomSpeed;\r\n        if ((this.scale > maxScale && change < 0) || (this.scale < minScale && change > 0)) {\r\n            console.log(\"Returning because scale is\", this.scale, \"and delta is\", change);\r\n            return;\r\n        }\r\n\r\n        let mouseBefore = this.screenToPlaneSpace(mouseX, mouseY);\r\n        this.scale -= change;\r\n        let mouseBeforeScreen = this.planeToScreenSpace(mouseBefore[0], mouseBefore[1]);\r\n\r\n        this.xOrigin -= mouseBeforeScreen[0] - mouseX;\r\n        this.yOrigin -= mouseBeforeScreen[1] - mouseY;\r\n\r\n        // Scale text\r\n        if (this.drawEveryNthLine * this.scale < minSpaceBetweenLines) {\r\n            this.zoomMultiplyCounter--;\r\n            if (this.zoomMultiplyCounter < 0) {\r\n                this.zoomMultiplyCounter += 3;\r\n                this.drawEveryNthLine *= 5/2;\r\n            }\r\n            else this.drawEveryNthLine *= 2;\r\n        }\r\n        else if (this.drawEveryNthLine * this.scale > maxSpaceBetweenLine) {\r\n            this.zoomMultiplyCounter++;\r\n            if (this.zoomMultiplyCounter > 2) {\r\n                this.zoomMultiplyCounter -= 3;\r\n                this.drawEveryNthLine /= 5/2;\r\n            }\r\n            else this.drawEveryNthLine /= 2;\r\n        }\r\n\r\n        this.draw();\r\n    }\r\n\r\n    draw = () => {\r\n        let drawBG = (ctx) => {\r\n            ctx.fillStyle = COLORS.white;\r\n            ctx.beginPath();\r\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            ctx.fill();\r\n        }\r\n        let drawScaleLines = (ctx) => {\r\n            ctx.lineWidth = 2;\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = COLORS.gray;\r\n            let lineSpace = this.scale * this.drawEveryNthLine;\r\n            let startDraw = this.xOrigin % lineSpace;// Get the remainder to know where to start drawing the lines\r\n\r\n            for (let i = startDraw; i < ctx.canvas.width; i += lineSpace) {\r\n                ctx.moveTo(i, 0);\r\n                ctx.lineTo(i, ctx.canvas.height);\r\n            }\r\n            startDraw = this.yOrigin % lineSpace;\r\n            for (let i = startDraw; i < ctx.canvas.height; i += lineSpace) {\r\n                ctx.moveTo(0, i);\r\n                ctx.lineTo(ctx.canvas.width, i);\r\n            }\r\n            ctx.stroke();\r\n        }\r\n        let drawAxis = (ctx) => {\r\n            ctx.lineWidth = 2;\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = COLORS.black;\r\n            ctx.moveTo(0, this.yOrigin);\r\n            ctx.lineTo(ctx.canvas.width, this.yOrigin);\r\n            ctx.moveTo(this.xOrigin, 0);\r\n            ctx.lineTo(this.xOrigin, ctx.canvas.height);\r\n            ctx.stroke();\r\n        }\r\n        let drawPoints = (ctx) => {\r\n            ctx.beginPath();\r\n            ctx.fillStyle = COLORS.blue;\r\n            for (let i = 0; i < this.props.points.length; i++) {\r\n                const [x, y] = this.planeToScreenSpace(this.props.points[i][0], this.props.points[i][1]);\r\n                ctx.moveTo(x, y);\r\n                ctx.arc(x, y, pointRadius, 0, 2*Math.PI);\r\n            }\r\n            ctx.fill();\r\n        }\r\n        let drawScaleText = (ctx) => {\r\n            let spaceBetweenLines = linesBetweenTexts * this.drawEveryNthLine;\r\n\r\n            let screenSide = this.screenToPlaneSpace(0, 0);\r\n\r\n            let firstDrawX = Math.floor(screenSide[0] / spaceBetweenLines) * spaceBetweenLines;\r\n            let firstDrawY = Math.floor(screenSide[1] / spaceBetweenLines) * spaceBetweenLines;\r\n            let firstDrawPixel = this.planeToScreenSpace(firstDrawX, firstDrawY);\r\n\r\n            ctx.font = \"20px Arial\";\r\n\t\t\tctx.fillStyle = COLORS.blackDark;\r\n\r\n            const RoundingFactor = 1_000_000_000_00;\r\n\r\n            let i = 0;\r\n            let pos = firstDrawPixel[0] + textXOffsetFromCenter;\r\n            while (pos < ctx.canvas.width) {\r\n                let num = Math.round((firstDrawX + i * spaceBetweenLines) * RoundingFactor) / RoundingFactor;\r\n                if (num !== 0)\r\n                    ctx.fillText(num, pos, textYOffsetFromCenter + this.yOrigin);\r\n                i++;\r\n                pos += this.scale * spaceBetweenLines;\r\n            }\r\n            i = 0;\r\n            pos = firstDrawPixel[1] + textYOffsetFromCenter;\r\n            while (pos < ctx.canvas.height) {\r\n                let num = Math.round((firstDrawY + i * spaceBetweenLines) *  RoundingFactor) / RoundingFactor;\r\n                if (num !== 0)\r\n                    ctx.fillText(num, textXOffsetFromCenter + this.xOrigin, pos);\r\n                i--;\r\n                pos += this.scale * spaceBetweenLines;\r\n            }\r\n\r\n            // Points (1, 0) and (0, 1)\r\n            /*\r\n            let point1_1 = this.screenToPlaneSpace(this.xOrigin + this.scale * this.drawEveryNthLine, this.yOrigin - this.scale * this.drawEveryNthLine);\r\n            ctx.fillText(point1_1[0].toString(), this.xOrigin + this.scale * this.drawEveryNthLine + textXOffsetFromCenter, this.yOrigin + textYOffsetFromCenter);\r\n            ctx.fillText(point1_1[1].toString(), this.xOrigin + textXOffsetFromCenter, this.yOrigin - this.scale* this.drawEveryNthLine + textYOffsetFromCenter);\r\n            //*/\r\n        }\r\n        let drawFunction = (ctx, funcObject, color) => {\r\n            ctx.lineWidth = functionLineWidth;\r\n            ctx.strokeStyle = color;\r\n            ctx.beginPath();\r\n\r\n            let smallestSample = FunctionData[funcObject[1]][5];\r\n            let biggestSample = FunctionData[funcObject[1]][6];\r\n\r\n            let startScreenPos = smallestSample === undefined ? 0 : Math.max(this.planeToScreenSpace(smallestSample, 0)[0], 0);\r\n            let endScreenPos = biggestSample === undefined ? ctx.canvas.width : Math.min(this.planeToScreenSpace(biggestSample, 0)[0], ctx.canvas.width);\r\n            let interval = (endScreenPos-startScreenPos) / samplesInFunction;\r\n\r\n\t\t    for (let xP = startScreenPos; xP < endScreenPos; xP += interval) {\r\n\t\t\t    let x = this.screenToPlaneSpace(xP, 0)[0];\r\n\t\t\t    let yP = this.planeToScreenSpace(0, funcObject[0](x))[1];\r\n\t\t\t\r\n\t\t\t    ctx.lineTo(xP, Math.max(0, Math.min(yP, ctx.canvas.height)));\r\n\t\t    }\r\n\t\t    ctx.stroke();\r\n        }\r\n        let drawFunctionFormula = (ctx, funcObject, color, xPos, yPos) => {\r\n\r\n            // Draw error\r\n            ctx.fillStyle = functionColor[7];/*Gray*/\r\n            ctx.font = \"15px Arial\";\r\n            ctx.fillText(\"Error \" + RoundToDecimals(funcObject[3], Math.pow(10, 10)), xPos, yPos+15);\r\n\r\n            // Draw formula\r\n            ctx.font = \"25px Arial\";\r\n            ctx.fillStyle = functionColor[7];/*Gray*/\r\n            ctx.fillText(funcObject[2], xPos+1, yPos+1); // Backdrop\r\n\t\t\tctx.fillStyle = color;\r\n            ctx.fillText(funcObject[2], xPos, yPos);\r\n\r\n        }\r\n\r\n\r\n        let ctx = this.ctx;\r\n        if (ctx === undefined) {\r\n            console.error(\"Canvas context was undefined!\");\r\n            return;\r\n        }\r\n        ctx.lineWidth = 1;\r\n        \r\n        drawBG(ctx);\r\n        drawScaleLines(ctx);\r\n        for (let i = 0; i < this.renderingFunctionObjects.length; i++)\r\n            drawFunction(ctx, this.renderingFunctionObjects[i], functionColor[i]);\r\n        drawAxis(ctx);\r\n        drawPoints(ctx);\r\n        drawScaleText(ctx);\r\n        for (let i = 0; i < this.renderingFunctionObjects.length; i++)\r\n            drawFunctionFormula(ctx, this.renderingFunctionObjects[i], functionColor[i], 30, window.innerHeight - 50*i - 30);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ScreenView\r\n                init={this.initCanvas}\r\n                draw={this.draw}\r\n                zoom={this.zoom}\r\n                addDataPoint={() => {}}\r\n                canvasDrag={this.canvasDrag}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction GetBestFuncs(points)\r\n{\r\n    if (points.length === 0)\r\n        return []\r\n\r\n    let [x, y] = ConvertPointsToXYArrays(points)\r\n\r\n    /* [ ... [func, i, leastSquares, params] ... ] */\r\n    let functionApproximates = [];\r\n    let functionApproximateIndex = 0;\r\n\r\n    for (let i = 0; i < FunctionData.length; i++)\r\n    {\r\n        if (points.length < FunctionData[i][7])\r\n            continue;\r\n\r\n        let params = FunctionData[i][2](x, y);\r\n        \r\n        const leastSquaresMultiplier = FunctionData[i][4];\r\n        functionApproximates[functionApproximateIndex] = [\r\n            function(x) { return FunctionData[i][1](x, params); }, \r\n            i, \r\n            -1,/*Placeholder*/\r\n            params\r\n        ];\r\n        functionApproximates[functionApproximateIndex][2] = \r\n            leastSquaresMultiplier * getLeastSquares(functionApproximates[functionApproximateIndex][0], x, y);\r\n\r\n        functionApproximateIndex++\r\n    }\r\n\r\n    functionApproximates.sort(function(a, b) { return (a[2] < b[2] ? -1 : 1); })\r\n\r\n    /* [ ... [func, i, stringFormula, error], [func, i, stringFormula, error] ... ] */\r\n    let functionsToShow = [];\r\n\r\n    for (let i = 0; i < min(maxShowFuncAmount, functionApproximates.length); i++) {\r\n        if (i !== 0 && functionApproximates[i][2] > leastSquaresTreshold)\r\n            break;\r\n\r\n        functionsToShow.push([\r\n            functionApproximates[i][0], \r\n            functionApproximates[i][1], \r\n            GetStringFormula(functionApproximates[i][1], functionApproximates[i][3]),\r\n            functionApproximates[i][2]\r\n        ]);\r\n    }\r\n\r\n    return functionsToShow;\r\n}\r\nfunction GetBestFunctionOfType(points, functionIndex)\r\n{\r\n    if (points.length < FunctionData[functionIndex][7])\r\n        return [];\r\n\r\n    let [x, y] = ConvertPointsToXYArrays(points);\r\n    let params = FunctionData[functionIndex][2](x, y);\r\n    \r\n    const leastSquaresMultiplier = FunctionData[functionIndex][4];\r\n    let functionApproximates = [\r\n        function(x) { return FunctionData[functionIndex][1](x, params); }, \r\n        functionIndex, \r\n        -1,/*Placeholder*/\r\n        params\r\n    ];\r\n    functionApproximates[2] = leastSquaresMultiplier * getLeastSquares(functionApproximates[0], x, y);\r\n\r\n    return [[functionApproximates[0], functionApproximates[1], GetStringFormula(functionApproximates[1], functionApproximates[3]), functionApproximates[2]]]\r\n}\r\n\r\nfunction ConvertPointsToXYArrays(points)\r\n{\r\n    let x = Array(points.length);\r\n    let y = Array(points.length);\r\n    for (let i = 0; i < points.length; i++)\r\n    {\r\n        x[i] = points[i][0];\r\n        y[i] = points[i][1];\r\n    }\r\n\r\n    return [x, y]\r\n}\r\n\r\nfunction RoundToDecimals(number, tenthPower) { return Math.round((number + Number.EPSILON) * tenthPower) / tenthPower; }\r\n\r\nfunction GetStringFormula(i, params) {\r\n    const tenthPower = Math.pow(10, decimals);\r\n    let RoundCorrectDecimals = (number) => RoundToDecimals(number, tenthPower);\r\n\r\n    let str = FunctionData[i][3]\r\n\r\n    let nextParamIndex = params.length - 1;\r\n\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (str[i] !== '_') \r\n            continue;\r\n        \r\n        if (params[nextParamIndex] < 0) {\r\n            // if there is a + before, switch it to -\r\n            if (i - 2 > 0 && str[i - 2] === '+') {\r\n                str = str.slice(0, i-2) + '-' + str.slice(i-1);\r\n                str = str.slice(0, i) + RoundCorrectDecimals(Math.abs(params[nextParamIndex])) + str.slice(i+1);\r\n            }\r\n            else if (i - 1 > 0 && str[i - 1] === '+') {\r\n                str[i - 1] = '-';\r\n                str = str.slice(0, i) + RoundCorrectDecimals(Math.abs(params[nextParamIndex])) + str.slice(i+1);\r\n            }\r\n            else {\r\n                str = str.slice(0, i) + RoundCorrectDecimals(params[nextParamIndex]) + str.slice(i+1);;\r\n            }\r\n        }\r\n        else {\r\n            str = str.slice(0, i) + RoundCorrectDecimals(params[nextParamIndex]) + str.slice(i+1);\r\n        }\r\n        nextParamIndex--;\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nfunction getLeastSquares(func, x, y) {\r\n    let total = 0;\r\n    for (let i = 0; i < x.length; i++)\r\n        total += Math.pow(func(x[i]) - y[i], 2);\r\n    return total / x.length;\r\n}\r\n\r\nexport default CoordinatePlane;","import {React, useState} from 'react'\r\nimport './index.css'\r\nimport './App.css'\r\nimport {Navbar, Button, Col, Form, Row, Dropdown, NavDropdown, Nav } from 'react-bootstrap'\r\nimport FunctionData from './canvas/FunctionData.js'\r\n\r\nfunction TopBar({ addPoint, clear, findingDone, startFunctionFind, functionIndex, setFunctionIndex }) {\r\n\r\n    const [yFieldValue, setYFieldValue] = useState(\"\");\r\n    const [xFieldValue, setXFieldValue] = useState(\"\");\r\n    const [xInvalid, setXInvalid] = useState(false);\r\n    const [yInvalid, setYInvalid] = useState(false);\r\n\r\n    function addPointEvent() {\r\n        let invalid = xFieldValue === \"\" || yFieldValue === \"\"\r\n        setXInvalid(xFieldValue === \"\");\r\n        setYInvalid(yFieldValue === \"\");\r\n        if (invalid) return;\r\n\r\n        setYFieldValue(\"\");\r\n        setXFieldValue(\"\");\r\n        addPoint(Number(xFieldValue), Number(yFieldValue));\r\n    }\r\n\r\n    const changeFocusingField = (event, delta) => {\r\n        let key = event.key.toLowerCase();\r\n\r\n        const acceptedKeys = [\"enter\"];\r\n        const switchIfCaretAtRightmost = [\"arrowright\"];\r\n        const switchIfCaretAtLeftmost = [\"arrowleft\"];\r\n\r\n        if (acceptedKeys.includes(key)\r\n            || (switchIfCaretAtRightmost.includes(key) && event.target.selectionStart === event.target.defaultValue.length)\r\n            || (switchIfCaretAtLeftmost.includes(key) && event.target.selectionStart === 0))\r\n        {\r\n            //event.target.selectionStart = event.target.defaultValue.length;\r\n            const form = event.target.form;\r\n            const index = [...form].indexOf(event.target);\r\n            form.elements[index + delta].focus();\r\n            event.preventDefault();\r\n        }\r\n        \r\n    }\r\n\r\n    const ValidateFieldAsNumber = (onInputEvent) => {\r\n        return onInputEvent.target.value\r\n            /* Convert commas to dots */\r\n            .replace(',', '.')\r\n            // Allow only numbers, a dot and a negative sign\r\n            .replace(/[^0-9.,-]/g, '')\r\n            // Don't allow for a dot if there already exists a dot\r\n            .replace(/(\\..*)\\./g, '$1')\r\n            // Don't allow for a negative sign if this isn't the first character\r\n            .replace(/(?<=.)[-]/g, '')\r\n    }\r\n\r\n    const BestFitText = \"Best fit\";\r\n\r\n    return (\r\n        <Navbar className=\"topBar\" expand=\"lg\" sticky=\"top\">\r\n            <Col className=\"leftSide\">\r\n                    <p className=\"logoText horPadding\">Find a Function</p>\r\n\r\n                    <Button className=\"btnStyle horPadding\" onClick={() => clear()}>Clear</Button>\r\n            </Col>\r\n\r\n            <Col className=\"center\">\r\n                <Col>\r\n                    <Nav style={{\"justifyContent\": \"right\"}}>\r\n                        <NavDropdown className=\"dropdownStyle horPadding\" title={functionIndex >= 0 ? FunctionData[functionIndex][3] : BestFitText}\r\n                            onSelect={(index, event) => setFunctionIndex(Number(index))}>\r\n                            <Dropdown.Item as=\"button\" eventKey={-1} key={-1}>{BestFitText}</Dropdown.Item>\r\n                            {\r\n                                FunctionData.map((func, index) => ( <Dropdown.Item as=\"button\" eventKey={index} key={index}>{func[3]}</Dropdown.Item>))\r\n                            }\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Col>\r\n                <Col>\r\n                    <Button className=\"btnStyle horPadding\" disabled={!findingDone} onClick={() => startFunctionFind()}>{findingDone ? \"Start Find\" : \"Finding...\"}</Button>\r\n                </Col>\r\n            </Col>\r\n\r\n            <Col>\r\n                <Form className=\"rightSide\">\r\n                    <div className=\"numberField\">\r\n                        <Form.Control className=\"moveDownLittle\" isInvalid={xInvalid} size=\"sm\" type=\"text\" placeholder=\"X-Coord\" \r\n                            value={xFieldValue} onInput={(event) => setXFieldValue(ValidateFieldAsNumber(event))}\r\n                            onKeyDown={(event) => {changeFocusingField(event, 1)}}/>\r\n                    </div>\r\n                    <div className=\"numberField\">\r\n                        <Form.Control className=\"moveDownLittle\" isInvalid={yInvalid} size=\"sm\" type=\"text\" placeholder=\"Y-Coord\"\r\n                            value={yFieldValue} onInput={(event) => setYFieldValue(ValidateFieldAsNumber(event))}\r\n                            onKeyDown={(event) => {\r\n                                changeFocusingField(event, -1);\r\n                                if (event.key.toLowerCase() === \"enter\")\r\n                                    addPointEvent();\r\n                            }}/>\r\n                    </div>\r\n                    <Button className=\"btnStyle\" onClick={addPointEvent}>Add</Button>\r\n                </Form>\r\n            </Col>\r\n\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default TopBar;","import './App.css';\nimport { React, useEffect, useState, useRef } from 'react';\nimport CoordinatePlane from './canvas/CoordinatePlane';\nimport TopBar from './TopBar.js';\nimport { Alert } from 'react-bootstrap';\n\nfunction ContainsXValue(x, points) {\n  for (let i = 0; i < points.length; i++) {\n    if (points[i][0] === x) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction App() {\n  const [points, setPoints] = useState([]);\n  const [clearBoardFlag, setClearBoardFlag] = useState(false);\n\n  // -1 is uses the best fit line, an index uses the function at that index\n  const [functionIndex, setFunctionIndex] = useState(-1);\n\n  const [findingBestLine, setFindingBestLine] = useState(false);\n  const [findingDone, setFindingDone] = useState(true);\n\n  const [alertPopup, setAlertPopup] = useState(\"That is not allowed.\");\n  const alertRef = useRef(null);\n\n  function addPoint(x, y) {\n    if (ContainsXValue(x, points)) {\n      StartAlertSequence(\"That x-coordinate already has a point.\");\n      return;\n    }\n\n    setPoints([...points, [x, y]]);\n  }\n  function clear() {\n    setPoints([]);\n    setClearBoardFlag(!clearBoardFlag);\n  }\n  function startFunctionFind() {\n    setFindingBestLine(true);\n    setFindingDone(false);\n  }\n  function stopFunctionFind() {\n    setFindingBestLine(false);\n    setFindingDone(true);\n  }\n\n  function StartAlertSequence(text) {\n    setAlertPopup(text);\n                     alertRef.current.classList.toggle(\"alertUp\")\n    setTimeout(() => alertRef.current.classList.toggle(\"alertUp\"), 2000)\n  }\n\n\n  return (\n    <>\n      <TopBar addPoint={addPoint} clear={clear} findingDone={findingDone} \n        startFunctionFind={startFunctionFind} \n        functionIndex={functionIndex} setFunctionIndex={setFunctionIndex}\n      />\n      {\n        alertPopup === \"\" ?\n          null :\n          <div>\n            <Alert ref={alertRef} className=\"errorAlert alertUp\" variant=\"danger\"> {alertPopup} </Alert>\n          </div>\n      }\n      <CoordinatePlane clearBoardFlag={clearBoardFlag} points={points}\n        findingBestLine={findingBestLine}\n        functionIndex={functionIndex}\n        stopFunctionFind={stopFunctionFind}\n        showAlertPopup={StartAlertSequence}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}